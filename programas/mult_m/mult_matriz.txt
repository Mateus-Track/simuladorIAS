M(0) 0 - valor 0
M(1) 1 - valor 1
M(2) 0 - i 
M(3) 0 - j
M(4) 0 - k
M(5) 4 - tamanho das matrizes // 2 
M(6) 9 - offset da matriz A 
M(7) 25 - offset da matriz B // 13 
M(8) 41 - offset da matriz C // 17

A = [1, 3, 5, 7] 
    [9, 1, 3, 5] 
    [7, 9, 1, 3] 
    [5, 7, 9, 1]

B = [0, 2, 4, 6] 
    [8, 0, 2, 4] 
    [6, 8, 0, 2] 
    [4, 6, 8, 0]

C = [0, 0, 0, 0] 
    [0, 0, 0, 0] 
    [0, 0, 0, 0] 
    [0, 0, 0, 0]

00	0
01	1
02	0 # i
03	0 # j
04	0 # k
05	4 # tamanho da matriz
06	9 # offset A
07	25 # offset B
08	41 # offset C
09	1
10	3
11	5
12	7
13  9
14  1
15  3
16  5
17  7
18  9
19  1
20  3
21  5
22  7
23  9
24  1
25  0
26  2
27  4
28  6
29  8
30  0
31  2
32  4
33  6
34  8
35  0
36  2
37  4
38  6
39  8
40  0
41  0
42  0
43  0
44  0
45  0
46  0
47  0
48  0
49  0
50  0
51  0
52  0
53  0
54  0
55  0
56  0

# AC = A[i][k] 

57 	LOAD MQ, M(2)
57 	MUL M(5)
58 	LOAD MQ
58 	ADD M(4)
59	ADD M(6)

59	STOR M(66,28:39)

# AC = B[k][j]

60 LOAD MQ, M(4)
60 MUL M(5)
61 LOAD MQ
61 ADD M(3)
62 ADD M(7)

62 STOR M(67,8:19)

# AC = C[i][j] 

63 LOAD MQ, M(2)
63 MUL M(5)
64 LOAD MQ
64 ADD M(3)
65 ADD M(8)

65 STOR M(68,8:19)

66 STOR M(68,28:39)

# AC = C[i][j] + A[i][k] * B[k][j]

66 LOAD MQ, M(0)
67 MUL M(0)
67 LOAD MQ
68 ADD M(0)

68 STOR M(0)

# k++

69 LOAD(4)
69 ADD M(1)
70 STOR M(4)

# AC = Número de colunas de A - 1

70 LOAD M(5)
71 SUB M(1)

# AC - k 

71 SUB M(4)
72 JUMP+ M(57,0:19)

# k = 0

72 LOAD M(0)
73 STOR M(4)

# j++

73 LOAD M(3)
74 ADD M(1)
74 STOR M(3)

# AC = Número de colunas de B - 1

75 LOAD M(5)
75 SUB M(1)

# AC - j 

76 SUB M(3)
76 JUMP+ M(57,0:19)

# j = 0

77 LOAD M(0)
77 STOR M(3)

# i++

78 LOAD M(2)
78 ADD M(1)
79 STOR M(2)

# AC = Número de linhas de A - 1

79 LOAD M(5)
80 SUB M(1)

# AC - i

80 SUB M(2)
81 JUMP+ M(57,0:19)

81 EXIT